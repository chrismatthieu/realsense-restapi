{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Projects/realsense-restapi/realsense-react-client/src/pages/WebRTCDemo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebRTCDemo = () => {\n  _s();\n  const [apiUrl, setApiUrl] = useState('http://localhost:8000/api');\n  const [deviceId, setDeviceId] = useState('');\n  const [streamType, setStreamType] = useState('color');\n  const [status, setStatus] = useState('Ready to connect');\n  const [statusType, setStatusType] = useState('info');\n  const [log, setLog] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [streamRefs, setStreamRefs] = useState([]);\n  const videoRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n  const sessionIdRef = useRef(null);\n  const sessionRefreshIntervalRef = useRef(null);\n  const logMessage = useCallback(message => {\n    const timestamp = new Date().toLocaleTimeString();\n    setLog(prev => `[${timestamp}] ${message}\\n${prev}`);\n  }, []);\n  const updateStatus = useCallback((message, type = 'info') => {\n    setStatus(message);\n    setStatusType(type);\n  }, []);\n  const discoverDevices = useCallback(async () => {\n    try {\n      logMessage('Discovering devices...');\n      updateStatus('Discovering devices...', 'info');\n      const response = await axios.get(`${apiUrl}/devices/`);\n      const devices = response.data;\n      if (devices.length > 0) {\n        setDeviceId(devices[0].device_id);\n        logMessage(`Found ${devices.length} device(s): ${devices.map(d => d.device_id).join(', ')}`);\n        updateStatus(`Found ${devices.length} device(s)`, 'success');\n      } else {\n        logMessage('No devices found');\n        updateStatus('No devices found', 'error');\n      }\n    } catch (error) {\n      logMessage(`Failed to discover devices: ${error.message}`);\n      updateStatus(`Failed to discover devices: ${error.message}`, 'error');\n    }\n  }, [apiUrl, logMessage, updateStatus]);\n  const startStream = async () => {\n    if (!deviceId) {\n      updateStatus('Please enter a device ID', 'error');\n      return;\n    }\n    try {\n      logMessage('Starting WebRTC stream...');\n      updateStatus('Starting WebRTC stream...', 'info');\n\n      // Create WebRTC offer\n      const offerResponse = await axios.post(`${apiUrl}/webrtc/offer`, {\n        device_id: deviceId,\n        stream_types: [streamType]\n      });\n      const {\n        session_id,\n        offer\n      } = offerResponse.data;\n      sessionIdRef.current = session_id;\n      logMessage(`Created session: ${session_id}`);\n\n      // Create RTCPeerConnection\n      const pc = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      });\n      peerConnectionRef.current = pc;\n\n      // Handle incoming tracks\n      pc.ontrack = event => {\n        logMessage('Received remote track');\n        if (videoRef.current) {\n          videoRef.current.srcObject = event.streams[0];\n        }\n      };\n\n      // Handle ICE candidates\n      pc.onicecandidate = async event => {\n        if (event.candidate) {\n          try {\n            await axios.post(`${apiUrl}/webrtc/ice-candidates`, {\n              session_id: session_id,\n              candidate: event.candidate\n            });\n          } catch (error) {\n            logMessage(`Failed to send ICE candidate: ${error.message}`);\n          }\n        }\n      };\n\n      // Set remote description\n      await pc.setRemoteDescription(new RTCSessionDescription(offer));\n\n      // Create answer\n      const answer = await pc.createAnswer();\n      await pc.setLocalDescription(answer);\n\n      // Send answer\n      await axios.post(`${apiUrl}/webrtc/answer`, {\n        session_id: session_id,\n        answer: answer\n      });\n      setIsConnected(true);\n      updateStatus('WebRTC stream connected', 'success');\n      logMessage('WebRTC stream connected successfully');\n\n      // Start session refresh\n      startSessionRefresh();\n    } catch (error) {\n      logMessage(`Failed to start stream: ${error.message}`);\n      updateStatus(`Failed to start stream: ${error.message}`, 'error');\n    }\n  };\n  const stopStream = async () => {\n    try {\n      if (sessionIdRef.current) {\n        logMessage('Stopping WebRTC stream...');\n        await axios.delete(`${apiUrl}/webrtc/sessions/${sessionIdRef.current}`);\n        logMessage('WebRTC stream stopped');\n      }\n      if (peerConnectionRef.current) {\n        peerConnectionRef.current.close();\n        peerConnectionRef.current = null;\n      }\n      if (videoRef.current) {\n        videoRef.current.srcObject = null;\n      }\n      setIsConnected(false);\n      sessionIdRef.current = null;\n      updateStatus('WebRTC stream stopped', 'info');\n      stopSessionRefresh();\n    } catch (error) {\n      logMessage(`Failed to stop stream: ${error.message}`);\n    }\n  };\n  const refreshSessions = async () => {\n    try {\n      const [sessionsResponse, streamRefsResponse] = await Promise.all([axios.get(`${apiUrl}/webrtc/sessions`), axios.get(`${apiUrl}/webrtc/stream-references`)]);\n      setSessions(sessionsResponse.data);\n      setStreamRefs(streamRefsResponse.data);\n    } catch (error) {\n      logMessage(`Failed to refresh sessions: ${error.message}`);\n    }\n  };\n  const closeAllSessions = async () => {\n    try {\n      logMessage('Closing all sessions...');\n      await axios.delete(`${apiUrl}/webrtc/sessions`);\n      logMessage('All sessions closed');\n      setSessions([]);\n      setStreamRefs([]);\n    } catch (error) {\n      logMessage(`Failed to close all sessions: ${error.message}`);\n    }\n  };\n  const startSessionRefresh = () => {\n    sessionRefreshIntervalRef.current = setInterval(refreshSessions, 2000);\n  };\n  const stopSessionRefresh = () => {\n    if (sessionRefreshIntervalRef.current) {\n      clearInterval(sessionRefreshIntervalRef.current);\n      sessionRefreshIntervalRef.current = null;\n    }\n  };\n  useEffect(() => {\n    discoverDevices();\n    return () => {\n      stopSessionRefresh();\n    };\n  }, [discoverDevices]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFA5 RealSense WebRTC Multi-Client Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connect to RealSense cameras via WebRTC for real-time video streaming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"apiUrl\",\n          children: \"API URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"apiUrl\",\n          value: apiUrl,\n          onChange: e => setApiUrl(e.target.value),\n          placeholder: \"http://localhost:8000/api\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deviceId\",\n          children: \"Device ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"deviceId\",\n          value: deviceId,\n          onChange: e => setDeviceId(e.target.value),\n          placeholder: \"e.g., 844212070924\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"streamType\",\n          children: \"Stream Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"streamType\",\n          value: streamType,\n          onChange: e => setStreamType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"color\",\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"depth\",\n            children: \"Depth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"infrared-1\",\n            children: \"Infrared 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"infrared-2\",\n            children: \"Infrared 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '10px 0',\n            padding: '10px',\n            backgroundColor: '#e7f3ff',\n            borderRadius: '4px',\n            borderLeft: '4px solid #007bff'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83C\\uDFAF 3D Point Cloud Viewer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), \" For interactive 3D point cloud visualization,\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/pointcloud\",\n            style: {\n              color: '#007bff',\n              textDecoration: 'none',\n              fontWeight: 'bold',\n              marginLeft: '5px'\n            },\n            children: \"click here to open the 3D Point Cloud Demo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: discoverDevices,\n          className: \"button\",\n          children: \"\\uD83D\\uDD0D Discover Devices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startStream,\n          className: \"button\",\n          disabled: isConnected,\n          children: \"\\u25B6\\uFE0F Start WebRTC Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopStream,\n          className: \"button danger\",\n          disabled: !isConnected,\n          children: \"\\u23F9\\uFE0F Stop WebRTC Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshSessions,\n          className: \"button\",\n          children: \"\\uD83D\\uDD04 Refresh Sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeAllSessions,\n          className: \"button danger\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Close All Sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status ${statusType}`,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCCA Active Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-panel\",\n        children: sessions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Active WebRTC Sessions (\", sessions.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), sessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Session \", index + 1, \": \", session.session_id, \" - \", session.device_id, \" (\", session.stream_types.join(', '), \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No active sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start a stream to see active WebRTC sessions here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDD17 Stream References\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-panel\",\n        children: streamRefs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Active Stream References (\", streamRefs.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), streamRefs.map((ref, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Device \", ref.device_id, \": \", ref.stream_type, \" (refs: \", ref.reference_count, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No active stream references\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No device streams are currently active.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFA5 Video Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `video-wrapper ${isConnected ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Current Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            style: {\n              width: '100%',\n              borderRadius: '8px',\n              background: '#000'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${isConnected ? 'success' : 'info'}`,\n            children: isConnected ? 'Streaming' : 'No video stream'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDD Connection Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log\",\n        children: log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(WebRTCDemo, \"/55YBIbjyqvnoNyOK4L+fGFDT8I=\");\n_c = WebRTCDemo;\nexport default WebRTCDemo;\nvar _c;\n$RefreshReg$(_c, \"WebRTCDemo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","jsxDEV","_jsxDEV","WebRTCDemo","_s","apiUrl","setApiUrl","deviceId","setDeviceId","streamType","setStreamType","status","setStatus","statusType","setStatusType","log","setLog","isConnected","setIsConnected","sessions","setSessions","streamRefs","setStreamRefs","videoRef","peerConnectionRef","sessionIdRef","sessionRefreshIntervalRef","logMessage","message","timestamp","Date","toLocaleTimeString","prev","updateStatus","type","discoverDevices","response","get","devices","data","length","device_id","map","d","join","error","startStream","offerResponse","post","stream_types","session_id","offer","current","pc","RTCPeerConnection","iceServers","urls","ontrack","event","srcObject","streams","onicecandidate","candidate","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","startSessionRefresh","stopStream","delete","close","stopSessionRefresh","refreshSessions","sessionsResponse","streamRefsResponse","Promise","all","closeAllSessions","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","placeholder","style","margin","padding","backgroundColor","borderRadius","borderLeft","href","color","textDecoration","fontWeight","marginLeft","onClick","disabled","session","index","ref","stream_type","reference_count","autoPlay","playsInline","muted","width","background","_c","$RefreshReg$"],"sources":["/home/ubuntu/Projects/realsense-restapi/realsense-react-client/src/pages/WebRTCDemo.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\n\nconst WebRTCDemo = () => {\n  const [apiUrl, setApiUrl] = useState('http://localhost:8000/api');\n  const [deviceId, setDeviceId] = useState('');\n  const [streamType, setStreamType] = useState('color');\n  const [status, setStatus] = useState('Ready to connect');\n  const [statusType, setStatusType] = useState('info');\n  const [log, setLog] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [streamRefs, setStreamRefs] = useState([]);\n  \n  const videoRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n  const sessionIdRef = useRef(null);\n  const sessionRefreshIntervalRef = useRef(null);\n\n  const logMessage = useCallback((message) => {\n    const timestamp = new Date().toLocaleTimeString();\n    setLog(prev => `[${timestamp}] ${message}\\n${prev}`);\n  }, []);\n\n  const updateStatus = useCallback((message, type = 'info') => {\n    setStatus(message);\n    setStatusType(type);\n  }, []);\n\n  const discoverDevices = useCallback(async () => {\n    try {\n      logMessage('Discovering devices...');\n      updateStatus('Discovering devices...', 'info');\n\n      const response = await axios.get(`${apiUrl}/devices/`);\n      const devices = response.data;\n      \n      if (devices.length > 0) {\n        setDeviceId(devices[0].device_id);\n        logMessage(`Found ${devices.length} device(s): ${devices.map(d => d.device_id).join(', ')}`);\n        updateStatus(`Found ${devices.length} device(s)`, 'success');\n      } else {\n        logMessage('No devices found');\n        updateStatus('No devices found', 'error');\n      }\n    } catch (error) {\n      logMessage(`Failed to discover devices: ${error.message}`);\n      updateStatus(`Failed to discover devices: ${error.message}`, 'error');\n    }\n  }, [apiUrl, logMessage, updateStatus]);\n\n  const startStream = async () => {\n    if (!deviceId) {\n      updateStatus('Please enter a device ID', 'error');\n      return;\n    }\n\n    try {\n      logMessage('Starting WebRTC stream...');\n      updateStatus('Starting WebRTC stream...', 'info');\n\n      // Create WebRTC offer\n      const offerResponse = await axios.post(`${apiUrl}/webrtc/offer`, {\n        device_id: deviceId,\n        stream_types: [streamType]\n      });\n\n      const { session_id, offer } = offerResponse.data;\n      sessionIdRef.current = session_id;\n      logMessage(`Created session: ${session_id}`);\n\n      // Create RTCPeerConnection\n      const pc = new RTCPeerConnection({\n        iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n      });\n      peerConnectionRef.current = pc;\n\n      // Handle incoming tracks\n      pc.ontrack = (event) => {\n        logMessage('Received remote track');\n        if (videoRef.current) {\n          videoRef.current.srcObject = event.streams[0];\n        }\n      };\n\n      // Handle ICE candidates\n      pc.onicecandidate = async (event) => {\n        if (event.candidate) {\n          try {\n            await axios.post(`${apiUrl}/webrtc/ice-candidates`, {\n              session_id: session_id,\n              candidate: event.candidate\n            });\n          } catch (error) {\n            logMessage(`Failed to send ICE candidate: ${error.message}`);\n          }\n        }\n      };\n\n      // Set remote description\n      await pc.setRemoteDescription(new RTCSessionDescription(offer));\n\n      // Create answer\n      const answer = await pc.createAnswer();\n      await pc.setLocalDescription(answer);\n\n      // Send answer\n      await axios.post(`${apiUrl}/webrtc/answer`, {\n        session_id: session_id,\n        answer: answer\n      });\n\n      setIsConnected(true);\n      updateStatus('WebRTC stream connected', 'success');\n      logMessage('WebRTC stream connected successfully');\n\n      // Start session refresh\n      startSessionRefresh();\n\n    } catch (error) {\n      logMessage(`Failed to start stream: ${error.message}`);\n      updateStatus(`Failed to start stream: ${error.message}`, 'error');\n    }\n  };\n\n  const stopStream = async () => {\n    try {\n      if (sessionIdRef.current) {\n        logMessage('Stopping WebRTC stream...');\n        await axios.delete(`${apiUrl}/webrtc/sessions/${sessionIdRef.current}`);\n        logMessage('WebRTC stream stopped');\n      }\n\n      if (peerConnectionRef.current) {\n        peerConnectionRef.current.close();\n        peerConnectionRef.current = null;\n      }\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = null;\n      }\n\n      setIsConnected(false);\n      sessionIdRef.current = null;\n      updateStatus('WebRTC stream stopped', 'info');\n      stopSessionRefresh();\n\n    } catch (error) {\n      logMessage(`Failed to stop stream: ${error.message}`);\n    }\n  };\n\n  const refreshSessions = async () => {\n    try {\n      const [sessionsResponse, streamRefsResponse] = await Promise.all([\n        axios.get(`${apiUrl}/webrtc/sessions`),\n        axios.get(`${apiUrl}/webrtc/stream-references`)\n      ]);\n\n      setSessions(sessionsResponse.data);\n      setStreamRefs(streamRefsResponse.data);\n    } catch (error) {\n      logMessage(`Failed to refresh sessions: ${error.message}`);\n    }\n  };\n\n  const closeAllSessions = async () => {\n    try {\n      logMessage('Closing all sessions...');\n      await axios.delete(`${apiUrl}/webrtc/sessions`);\n      logMessage('All sessions closed');\n      setSessions([]);\n      setStreamRefs([]);\n    } catch (error) {\n      logMessage(`Failed to close all sessions: ${error.message}`);\n    }\n  };\n\n  const startSessionRefresh = () => {\n    sessionRefreshIntervalRef.current = setInterval(refreshSessions, 2000);\n  };\n\n  const stopSessionRefresh = () => {\n    if (sessionRefreshIntervalRef.current) {\n      clearInterval(sessionRefreshIntervalRef.current);\n      sessionRefreshIntervalRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    discoverDevices();\n    return () => {\n      stopSessionRefresh();\n    };\n  }, [discoverDevices]);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h2>🎥 RealSense WebRTC Multi-Client Demo</h2>\n        <p>Connect to RealSense cameras via WebRTC for real-time video streaming</p>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"apiUrl\">API URL:</label>\n          <input\n            type=\"text\"\n            id=\"apiUrl\"\n            value={apiUrl}\n            onChange={(e) => setApiUrl(e.target.value)}\n            placeholder=\"http://localhost:8000/api\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"deviceId\">Device ID:</label>\n          <input\n            type=\"text\"\n            id=\"deviceId\"\n            value={deviceId}\n            onChange={(e) => setDeviceId(e.target.value)}\n            placeholder=\"e.g., 844212070924\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"streamType\">Stream Type:</label>\n          <select\n            id=\"streamType\"\n            value={streamType}\n            onChange={(e) => setStreamType(e.target.value)}\n          >\n            <option value=\"color\">Color</option>\n            <option value=\"depth\">Depth</option>\n            <option value=\"infrared-1\">Infrared 1</option>\n            <option value=\"infrared-2\">Infrared 2</option>\n          </select>\n        </div>\n        \n        <div className=\"form-group\">\n          <p style={{ margin: '10px 0', padding: '10px', backgroundColor: '#e7f3ff', borderRadius: '4px', borderLeft: '4px solid #007bff' }}>\n            <strong>🎯 3D Point Cloud Viewer:</strong> For interactive 3D point cloud visualization, \n            <a href=\"/pointcloud\" style={{ color: '#007bff', textDecoration: 'none', fontWeight: 'bold', marginLeft: '5px' }}>\n              click here to open the 3D Point Cloud Demo\n            </a>\n          </p>\n        </div>\n        \n        <div>\n          <button onClick={discoverDevices} className=\"button\">\n            🔍 Discover Devices\n          </button>\n          <button \n            onClick={startStream} \n            className=\"button\"\n            disabled={isConnected}\n          >\n            ▶️ Start WebRTC Session\n          </button>\n          <button \n            onClick={stopStream} \n            className=\"button danger\"\n            disabled={!isConnected}\n          >\n            ⏹️ Stop WebRTC Session\n          </button>\n          <button onClick={refreshSessions} className=\"button\">\n            🔄 Refresh Sessions\n          </button>\n          <button onClick={closeAllSessions} className=\"button danger\">\n            🗑️ Close All Sessions\n          </button>\n        </div>\n\n        <div className={`status ${statusType}`}>\n          {status}\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h2>📊 Active Sessions</h2>\n        <div className=\"sessions-panel\">\n          {sessions.length > 0 ? (\n            <div>\n              <h3>Active WebRTC Sessions ({sessions.length})</h3>\n              {sessions.map((session, index) => (\n                <p key={index}>\n                  Session {index + 1}: {session.session_id} - {session.device_id} ({session.stream_types.join(', ')})\n                </p>\n              ))}\n            </div>\n          ) : (\n            <div>\n              <h3>No active sessions</h3>\n              <p>Start a stream to see active WebRTC sessions here.</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h2>🔗 Stream References</h2>\n        <div className=\"sessions-panel\">\n          {streamRefs.length > 0 ? (\n            <div>\n              <h3>Active Stream References ({streamRefs.length})</h3>\n              {streamRefs.map((ref, index) => (\n                <p key={index}>\n                  Device {ref.device_id}: {ref.stream_type} (refs: {ref.reference_count})\n                </p>\n              ))}\n            </div>\n          ) : (\n            <div>\n              <h3>No active stream references</h3>\n              <p>No device streams are currently active.</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h2>🎥 Video Stream</h2>\n        <div className=\"video-container\">\n          <div className={`video-wrapper ${isConnected ? 'active' : ''}`}>\n            <h3>Current Stream</h3>\n            <video\n              ref={videoRef}\n              autoPlay\n              playsInline\n              muted\n              style={{ width: '100%', borderRadius: '8px', background: '#000' }}\n            />\n            <div className={`status ${isConnected ? 'success' : 'info'}`}>\n              {isConnected ? 'Streaming' : 'No video stream'}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h2>📝 Connection Log</h2>\n        <div className=\"log\">{log}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default WebRTCDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}