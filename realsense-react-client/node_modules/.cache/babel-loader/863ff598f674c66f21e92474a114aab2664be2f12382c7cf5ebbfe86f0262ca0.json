{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Projects/realsense-restapi/realsense-react-client/src/pages/PointCloudDemo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PointCloudDemo = () => {\n  _s();\n  const [apiUrl, setApiUrl] = useState('http://localhost:8000/api');\n  const [deviceId, setDeviceId] = useState('');\n  const [isViewerRunning, setIsViewerRunning] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\n  const [pointCloudStatus, setPointCloudStatus] = useState('Stopped');\n  const [vertexCount, setVertexCount] = useState(0);\n  const [fps, setFps] = useState(0);\n\n  // Use ref to track running state for intervals\n  const isViewerRunningRef = useRef(false);\n  const [log, setLog] = useState('');\n  const canvasRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const pointCloudRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const frameCountRef = useRef(0);\n  const lastTimeRef = useRef(0);\n  const hasInitializedCameraRef = useRef(false);\n  const logMessage = useCallback(message => {\n    const timestamp = new Date().toLocaleTimeString();\n    setLog(prev => `[${timestamp}] ${message}\\n${prev}`);\n  }, []);\n  const initThreeJS = () => {\n    if (!canvasRef.current) return;\n\n    // Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    sceneRef.current = scene;\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(75, canvasRef.current.clientWidth / canvasRef.current.clientHeight, 0.1, 1000);\n    camera.position.set(0, 0, 5);\n    cameraRef.current = camera;\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvasRef.current,\n      antialias: true\n    });\n    renderer.setSize(canvasRef.current.clientWidth, canvasRef.current.clientHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current = renderer;\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.screenSpacePanning = false;\n    controls.minDistance = 0.1;\n    controls.maxDistance = 100;\n    controlsRef.current = controls;\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1, 1, 1);\n    scene.add(directionalLight);\n\n    // Grid helper\n    const gridHelper = new THREE.GridHelper(10, 10);\n    scene.add(gridHelper);\n\n    // Axes helper\n    const axesHelper = new THREE.AxesHelper(1);\n    scene.add(axesHelper);\n    logMessage('Three.js initialized');\n  };\n  const updatePointCloud = async () => {\n    if (!isViewerRunningRef.current || !deviceId) return;\n    try {\n      logMessage(`Fetching point cloud data for device: ${deviceId}`);\n      const response = await axios.get(`${apiUrl}/webrtc/pointcloud-data/${deviceId}`);\n      const data = response.data;\n      logMessage(`Received data: ${JSON.stringify(data).substring(0, 200)}...`);\n      logMessage(`Data type: ${typeof data}, vertices type: ${typeof data.vertices}`);\n      if (!data.vertices || data.vertices.length === 0) {\n        logMessage('No vertices data found');\n        setPointCloudStatus('No data');\n        return;\n      }\n      logMessage(`Vertices array length: ${data.vertices.length}`);\n      const vertices = new Float32Array(data.vertices);\n      logMessage(`Float32Array length: ${vertices.length}, vertex count: ${vertices.length / 3}`);\n      setVertexCount(vertices.length / 3);\n\n      // Store current camera state\n      const currentCameraPosition = cameraRef.current.position.clone();\n      const currentTarget = controlsRef.current.target.clone();\n\n      // Remove existing point cloud\n      if (pointCloudRef.current) {\n        sceneRef.current.remove(pointCloudRef.current);\n        pointCloudRef.current.geometry.dispose();\n        pointCloudRef.current.material.dispose();\n      }\n\n      // Create new geometry\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n      logMessage(`Created geometry with ${geometry.attributes.position.count} vertices`);\n\n      // Create material\n      const material = new THREE.PointsMaterial({\n        size: 0.02,\n        color: 0x00ff00,\n        transparent: true,\n        opacity: 0.8\n      });\n      logMessage('Created point cloud material');\n\n      // Create point cloud\n      const pointCloud = new THREE.Points(geometry, material);\n      sceneRef.current.add(pointCloud);\n      pointCloudRef.current = pointCloud;\n      logMessage(`Added point cloud to scene. Scene children count: ${sceneRef.current.children.length}`);\n\n      // Preserve camera state\n      if (!hasInitializedCameraRef.current) {\n        // Initial setup\n        cameraRef.current.position.set(0, 0, 2);\n        controlsRef.current.target.set(0, 0, 0);\n        hasInitializedCameraRef.current = true;\n        logMessage(`Initialized camera at position: ${cameraRef.current.position.x}, ${cameraRef.current.position.y}, ${cameraRef.current.position.z}`);\n      } else {\n        // Preserve user's view\n        cameraRef.current.position.copy(currentCameraPosition);\n        controlsRef.current.target.copy(currentTarget);\n        logMessage(`Preserved camera at position: ${cameraRef.current.position.x}, ${cameraRef.current.position.y}, ${cameraRef.current.position.z}`);\n      }\n      setPointCloudStatus('Streaming');\n      logMessage(`Updated point cloud with ${vertices.length / 3} vertices`);\n    } catch (error) {\n      logMessage(`Error updating point cloud: ${error.message}`);\n      setPointCloudStatus('Error');\n    }\n  };\n  const animate = currentTime => {\n    if (!isViewerRunning) return;\n    animationIdRef.current = requestAnimationFrame(animate);\n\n    // Calculate FPS\n    frameCountRef.current++;\n    if (currentTime - lastTimeRef.current >= 1000) {\n      setFps(frameCountRef.current);\n      frameCountRef.current = 0;\n      lastTimeRef.current = currentTime;\n    }\n\n    // Update controls\n    if (controlsRef.current) {\n      controlsRef.current.update();\n    }\n\n    // Render\n    if (rendererRef.current && sceneRef.current && cameraRef.current) {\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\n      // Debug: Log rendering info every 60 frames (about once per second)\n      if (frameCountRef.current % 60 === 0) {\n        logMessage(`Rendering frame. Scene children: ${sceneRef.current.children.length}, Point cloud: ${pointCloudRef.current ? 'Present' : 'Missing'}`);\n      }\n    }\n  };\n  const startPointCloudViewer = async () => {\n    if (!deviceId) {\n      alert('Please enter a device ID');\n      return;\n    }\n    try {\n      // Initialize Three.js if not already done\n      if (!sceneRef.current) {\n        initThreeJS();\n      }\n\n      // Clear existing point cloud\n      if (pointCloudRef.current) {\n        sceneRef.current.remove(pointCloudRef.current);\n        pointCloudRef.current.geometry.dispose();\n        pointCloudRef.current.material.dispose();\n        pointCloudRef.current = null;\n      }\n      setIsViewerRunning(true);\n      isViewerRunningRef.current = true;\n      setConnectionStatus('Connected');\n      setPointCloudStatus('Activating...');\n      logMessage('Starting 3D point cloud viewer...');\n\n      // Automatically activate point cloud processing\n      try {\n        logMessage('Activating point cloud processing...');\n        await axios.post(`${apiUrl}/devices/${deviceId}/point_cloud/activate`);\n        logMessage('Point cloud processing activated');\n\n        // Start a depth stream session to enable point cloud data\n        logMessage('Starting depth stream session...');\n        await axios.post(`${apiUrl}/devices/${deviceId}/stream/start`, {\n          configs: [{\n            sensor_id: `${deviceId}-sensor-0`,\n            stream_type: 'depth',\n            format: 'z16',\n            resolution: {\n              width: 640,\n              height: 480\n            },\n            framerate: 30\n          }]\n        });\n        logMessage('Depth stream session started');\n      } catch (error) {\n        logMessage(`Warning: ${error.message}`);\n      }\n\n      // Start animation loop\n      animate(0);\n\n      // Start point cloud updates\n      const updateInterval = setInterval(() => {\n        if (isViewerRunningRef.current) {\n          updatePointCloud();\n        } else {\n          clearInterval(updateInterval);\n        }\n      }, 1000);\n      logMessage('3D point cloud viewer started successfully');\n    } catch (error) {\n      logMessage(`Failed to start 3D viewer: ${error.message}`);\n      setConnectionStatus('Error');\n      setPointCloudStatus('Error');\n    }\n  };\n  const stopPointCloudViewer = async () => {\n    setIsViewerRunning(false);\n    isViewerRunningRef.current = false;\n    setConnectionStatus('Disconnected');\n    setPointCloudStatus('Stopped');\n    setVertexCount(0);\n    setFps(0);\n    if (animationIdRef.current) {\n      cancelAnimationFrame(animationIdRef.current);\n      animationIdRef.current = null;\n    }\n\n    // Clear existing point cloud\n    if (pointCloudRef.current) {\n      sceneRef.current.remove(pointCloudRef.current);\n      pointCloudRef.current.geometry.dispose();\n      pointCloudRef.current.material.dispose();\n      pointCloudRef.current = null;\n    }\n\n    // Reset camera initialization flag\n    hasInitializedCameraRef.current = false;\n\n    // Clean up depth session if it exists\n    if (deviceId) {\n      try {\n        logMessage('Cleaning up depth session...');\n        await axios.post(`${apiUrl}/devices/${deviceId}/stream/stop`);\n        logMessage('Depth session cleaned up');\n      } catch (error) {\n        logMessage(`Warning: Failed to clean up depth session: ${error.message}`);\n      }\n    }\n    logMessage('3D point cloud viewer stopped');\n  };\n  const discoverDevices = useCallback(async () => {\n    try {\n      logMessage('Discovering devices...');\n      logMessage(`Making request to: ${apiUrl}/devices/`);\n      const response = await axios.get(`${apiUrl}/devices/`);\n      logMessage(`Response status: ${response.status}`);\n      logMessage(`Response data: ${JSON.stringify(response.data)}`);\n      const devices = response.data;\n      if (devices.length > 0) {\n        setDeviceId(devices[0].device_id);\n        logMessage(`Found ${devices.length} device(s): ${devices.map(d => d.device_id).join(', ')}`);\n      } else {\n        logMessage('No devices found');\n      }\n    } catch (error) {\n      var _error$response;\n      logMessage(`Failed to discover devices: ${error.message}`);\n      logMessage(`Error details: ${JSON.stringify(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error)}`);\n    }\n  }, [apiUrl, logMessage]);\n  const handleKeyPress = useCallback(event => {\n    if (event.key === 'r' || event.key === 'R') {\n      // Reset camera\n      if (cameraRef.current && controlsRef.current) {\n        cameraRef.current.position.set(0, 0, 2);\n        controlsRef.current.target.set(0, 0, 0);\n        hasInitializedCameraRef.current = true;\n        logMessage('Camera reset to initial position');\n      }\n    }\n  }, [logMessage]);\n  useEffect(() => {\n    discoverDevices();\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n    };\n  }, [discoverDevices, handleKeyPress]);\n  useEffect(() => {\n    const handleResize = () => {\n      if (canvasRef.current && cameraRef.current && rendererRef.current) {\n        const width = canvasRef.current.clientWidth;\n        const height = canvasRef.current.clientHeight;\n        cameraRef.current.aspect = width / height;\n        cameraRef.current.updateProjectionMatrix();\n        rendererRef.current.setSize(width, height);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAF RealSense 3D Point Cloud Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Interactive 3D visualization of RealSense depth data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"apiUrl\",\n          children: \"API URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"apiUrl\",\n          value: apiUrl,\n          onChange: e => setApiUrl(e.target.value),\n          placeholder: \"Enter API URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deviceId\",\n          children: \"Device ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"deviceId\",\n          value: deviceId,\n          onChange: e => setDeviceId(e.target.value),\n          placeholder: \"e.g., 844212070924\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: discoverDevices,\n          className: \"button\",\n          children: \"\\uD83D\\uDD0D Discover Devices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startPointCloudViewer,\n          className: \"button success\",\n          disabled: isViewerRunning,\n          children: \"\\u25B6\\uFE0F Start 3D Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopPointCloudViewer,\n          className: \"button danger\",\n          disabled: !isViewerRunning,\n          children: \"\\u23F9\\uFE0F Stop Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Connection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 19\n            }, this), \" \", connectionStatus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Point Cloud:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 19\n            }, this), \" \", pointCloudStatus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Vertices:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 19\n            }, this), \" \", vertexCount.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"FPS:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this), \" \", fps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAE 3D Viewer Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Mouse Controls:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Left Click + Drag:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), \" Rotate camera around target\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Right Click + Drag:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), \" Pan camera\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Scroll Wheel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), \" Zoom in/out\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"R Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), \" Reset camera to initial position\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFA5 3D Point Cloud Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(0, 0, 0, 0.8)',\n          borderRadius: '15px',\n          padding: '20px',\n          height: '600px',\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            width: '100%',\n            height: '100%',\n            borderRadius: '10px',\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), !isViewerRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            fontSize: '18px',\n            color: '#ffd700'\n          },\n          children: \"Click \\\"Start 3D Viewer\\\" to begin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), isViewerRunning && vertexCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '20px',\n            right: '20px',\n            background: 'rgba(0, 0, 0, 0.7)',\n            padding: '10px',\n            borderRadius: '8px',\n            fontSize: '14px',\n            color: 'white'\n          },\n          children: [\"Points: \", vertexCount.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDD Connection Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log\",\n        children: log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(PointCloudDemo, \"33xPEG6OUcrXHggstnZTy9N8GIM=\");\n_c = PointCloudDemo;\nexport default PointCloudDemo;\nvar _c;\n$RefreshReg$(_c, \"PointCloudDemo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","THREE","OrbitControls","axios","jsxDEV","_jsxDEV","PointCloudDemo","_s","apiUrl","setApiUrl","deviceId","setDeviceId","isViewerRunning","setIsViewerRunning","connectionStatus","setConnectionStatus","pointCloudStatus","setPointCloudStatus","vertexCount","setVertexCount","fps","setFps","isViewerRunningRef","log","setLog","canvasRef","sceneRef","cameraRef","rendererRef","controlsRef","pointCloudRef","animationIdRef","frameCountRef","lastTimeRef","hasInitializedCameraRef","logMessage","message","timestamp","Date","toLocaleTimeString","prev","initThreeJS","current","scene","Scene","background","Color","camera","PerspectiveCamera","clientWidth","clientHeight","position","set","renderer","WebGLRenderer","canvas","antialias","setSize","setPixelRatio","window","devicePixelRatio","controls","domElement","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","gridHelper","GridHelper","axesHelper","AxesHelper","updatePointCloud","response","get","data","JSON","stringify","substring","vertices","length","Float32Array","currentCameraPosition","clone","currentTarget","target","remove","geometry","dispose","material","BufferGeometry","setAttribute","BufferAttribute","attributes","count","PointsMaterial","size","color","transparent","opacity","pointCloud","Points","children","x","y","z","copy","error","animate","currentTime","requestAnimationFrame","update","render","startPointCloudViewer","alert","post","configs","sensor_id","stream_type","format","resolution","width","height","framerate","updateInterval","setInterval","clearInterval","stopPointCloudViewer","cancelAnimationFrame","discoverDevices","status","devices","device_id","map","d","join","_error$response","handleKeyPress","event","key","addEventListener","removeEventListener","handleResize","aspect","updateProjectionMatrix","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","placeholder","onClick","disabled","style","display","justifyContent","alignItems","toLocaleString","borderRadius","padding","overflow","ref","top","left","transform","fontSize","right","_c","$RefreshReg$"],"sources":["/home/ubuntu/Projects/realsense-restapi/realsense-react-client/src/pages/PointCloudDemo.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport axios from 'axios';\n\nconst PointCloudDemo = () => {\n  const [apiUrl, setApiUrl] = useState('http://localhost:8000/api');\n  const [deviceId, setDeviceId] = useState('');\n  const [isViewerRunning, setIsViewerRunning] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\n  const [pointCloudStatus, setPointCloudStatus] = useState('Stopped');\n  const [vertexCount, setVertexCount] = useState(0);\n  const [fps, setFps] = useState(0);\n  \n  // Use ref to track running state for intervals\n  const isViewerRunningRef = useRef(false);\n  const [log, setLog] = useState('');\n\n  const canvasRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const pointCloudRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const frameCountRef = useRef(0);\n  const lastTimeRef = useRef(0);\n  const hasInitializedCameraRef = useRef(false);\n\n  const logMessage = useCallback((message) => {\n    const timestamp = new Date().toLocaleTimeString();\n    setLog(prev => `[${timestamp}] ${message}\\n${prev}`);\n  }, []);\n\n  const initThreeJS = () => {\n    if (!canvasRef.current) return;\n\n    // Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    sceneRef.current = scene;\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      canvasRef.current.clientWidth / canvasRef.current.clientHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 5);\n    cameraRef.current = camera;\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({ \n      canvas: canvasRef.current,\n      antialias: true \n    });\n    renderer.setSize(canvasRef.current.clientWidth, canvasRef.current.clientHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current = renderer;\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.screenSpacePanning = false;\n    controls.minDistance = 0.1;\n    controls.maxDistance = 100;\n    controlsRef.current = controls;\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    scene.add(ambientLight);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1, 1, 1);\n    scene.add(directionalLight);\n\n    // Grid helper\n    const gridHelper = new THREE.GridHelper(10, 10);\n    scene.add(gridHelper);\n\n    // Axes helper\n    const axesHelper = new THREE.AxesHelper(1);\n    scene.add(axesHelper);\n\n    logMessage('Three.js initialized');\n  };\n\n  const updatePointCloud = async () => {\n    if (!isViewerRunningRef.current || !deviceId) return;\n\n    try {\n      logMessage(`Fetching point cloud data for device: ${deviceId}`);\n      const response = await axios.get(`${apiUrl}/webrtc/pointcloud-data/${deviceId}`);\n      const data = response.data;\n\n      logMessage(`Received data: ${JSON.stringify(data).substring(0, 200)}...`);\n      logMessage(`Data type: ${typeof data}, vertices type: ${typeof data.vertices}`);\n\n      if (!data.vertices || data.vertices.length === 0) {\n        logMessage('No vertices data found');\n        setPointCloudStatus('No data');\n        return;\n      }\n\n      logMessage(`Vertices array length: ${data.vertices.length}`);\n      const vertices = new Float32Array(data.vertices);\n      logMessage(`Float32Array length: ${vertices.length}, vertex count: ${vertices.length / 3}`);\n      setVertexCount(vertices.length / 3);\n\n      // Store current camera state\n      const currentCameraPosition = cameraRef.current.position.clone();\n      const currentTarget = controlsRef.current.target.clone();\n\n      // Remove existing point cloud\n      if (pointCloudRef.current) {\n        sceneRef.current.remove(pointCloudRef.current);\n        pointCloudRef.current.geometry.dispose();\n        pointCloudRef.current.material.dispose();\n      }\n\n      // Create new geometry\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n      logMessage(`Created geometry with ${geometry.attributes.position.count} vertices`);\n\n      // Create material\n      const material = new THREE.PointsMaterial({\n        size: 0.02,\n        color: 0x00ff00,\n        transparent: true,\n        opacity: 0.8\n      });\n      logMessage('Created point cloud material');\n\n      // Create point cloud\n      const pointCloud = new THREE.Points(geometry, material);\n      sceneRef.current.add(pointCloud);\n      pointCloudRef.current = pointCloud;\n      logMessage(`Added point cloud to scene. Scene children count: ${sceneRef.current.children.length}`);\n\n      // Preserve camera state\n      if (!hasInitializedCameraRef.current) {\n        // Initial setup\n        cameraRef.current.position.set(0, 0, 2);\n        controlsRef.current.target.set(0, 0, 0);\n        hasInitializedCameraRef.current = true;\n        logMessage(`Initialized camera at position: ${cameraRef.current.position.x}, ${cameraRef.current.position.y}, ${cameraRef.current.position.z}`);\n      } else {\n        // Preserve user's view\n        cameraRef.current.position.copy(currentCameraPosition);\n        controlsRef.current.target.copy(currentTarget);\n        logMessage(`Preserved camera at position: ${cameraRef.current.position.x}, ${cameraRef.current.position.y}, ${cameraRef.current.position.z}`);\n      }\n\n      setPointCloudStatus('Streaming');\n      logMessage(`Updated point cloud with ${vertices.length / 3} vertices`);\n\n    } catch (error) {\n      logMessage(`Error updating point cloud: ${error.message}`);\n      setPointCloudStatus('Error');\n    }\n  };\n\n  const animate = (currentTime) => {\n    if (!isViewerRunning) return;\n\n    animationIdRef.current = requestAnimationFrame(animate);\n\n    // Calculate FPS\n    frameCountRef.current++;\n    if (currentTime - lastTimeRef.current >= 1000) {\n      setFps(frameCountRef.current);\n      frameCountRef.current = 0;\n      lastTimeRef.current = currentTime;\n    }\n\n    // Update controls\n    if (controlsRef.current) {\n      controlsRef.current.update();\n    }\n\n    // Render\n    if (rendererRef.current && sceneRef.current && cameraRef.current) {\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\n      // Debug: Log rendering info every 60 frames (about once per second)\n      if (frameCountRef.current % 60 === 0) {\n        logMessage(`Rendering frame. Scene children: ${sceneRef.current.children.length}, Point cloud: ${pointCloudRef.current ? 'Present' : 'Missing'}`);\n      }\n    }\n  };\n\n  const startPointCloudViewer = async () => {\n    if (!deviceId) {\n      alert('Please enter a device ID');\n      return;\n    }\n\n    try {\n      // Initialize Three.js if not already done\n      if (!sceneRef.current) {\n        initThreeJS();\n      }\n\n      // Clear existing point cloud\n      if (pointCloudRef.current) {\n        sceneRef.current.remove(pointCloudRef.current);\n        pointCloudRef.current.geometry.dispose();\n        pointCloudRef.current.material.dispose();\n        pointCloudRef.current = null;\n      }\n\n      setIsViewerRunning(true);\n      isViewerRunningRef.current = true;\n      setConnectionStatus('Connected');\n      setPointCloudStatus('Activating...');\n      logMessage('Starting 3D point cloud viewer...');\n\n      // Automatically activate point cloud processing\n      try {\n        logMessage('Activating point cloud processing...');\n        await axios.post(`${apiUrl}/devices/${deviceId}/point_cloud/activate`);\n        logMessage('Point cloud processing activated');\n\n        // Start a depth stream session to enable point cloud data\n        logMessage('Starting depth stream session...');\n        await axios.post(`${apiUrl}/devices/${deviceId}/stream/start`, {\n          configs: [{\n            sensor_id: `${deviceId}-sensor-0`,\n            stream_type: 'depth',\n            format: 'z16',\n            resolution: { width: 640, height: 480 },\n            framerate: 30\n          }]\n        });\n        logMessage('Depth stream session started');\n\n      } catch (error) {\n        logMessage(`Warning: ${error.message}`);\n      }\n\n      // Start animation loop\n      animate(0);\n\n      // Start point cloud updates\n      const updateInterval = setInterval(() => {\n        if (isViewerRunningRef.current) {\n          updatePointCloud();\n        } else {\n          clearInterval(updateInterval);\n        }\n      }, 1000);\n\n      logMessage('3D point cloud viewer started successfully');\n\n    } catch (error) {\n      logMessage(`Failed to start 3D viewer: ${error.message}`);\n      setConnectionStatus('Error');\n      setPointCloudStatus('Error');\n    }\n  };\n\n  const stopPointCloudViewer = async () => {\n    setIsViewerRunning(false);\n    isViewerRunningRef.current = false;\n    setConnectionStatus('Disconnected');\n    setPointCloudStatus('Stopped');\n    setVertexCount(0);\n    setFps(0);\n\n    if (animationIdRef.current) {\n      cancelAnimationFrame(animationIdRef.current);\n      animationIdRef.current = null;\n    }\n\n    // Clear existing point cloud\n    if (pointCloudRef.current) {\n      sceneRef.current.remove(pointCloudRef.current);\n      pointCloudRef.current.geometry.dispose();\n      pointCloudRef.current.material.dispose();\n      pointCloudRef.current = null;\n    }\n\n    // Reset camera initialization flag\n    hasInitializedCameraRef.current = false;\n\n    // Clean up depth session if it exists\n    if (deviceId) {\n      try {\n        logMessage('Cleaning up depth session...');\n        await axios.post(`${apiUrl}/devices/${deviceId}/stream/stop`);\n        logMessage('Depth session cleaned up');\n      } catch (error) {\n        logMessage(`Warning: Failed to clean up depth session: ${error.message}`);\n      }\n    }\n\n    logMessage('3D point cloud viewer stopped');\n  };\n\n  const discoverDevices = useCallback(async () => {\n    try {\n      logMessage('Discovering devices...');\n      logMessage(`Making request to: ${apiUrl}/devices/`);\n      \n      const response = await axios.get(`${apiUrl}/devices/`);\n      logMessage(`Response status: ${response.status}`);\n      logMessage(`Response data: ${JSON.stringify(response.data)}`);\n      \n      const devices = response.data;\n      \n      if (devices.length > 0) {\n        setDeviceId(devices[0].device_id);\n        logMessage(`Found ${devices.length} device(s): ${devices.map(d => d.device_id).join(', ')}`);\n      } else {\n        logMessage('No devices found');\n      }\n    } catch (error) {\n      logMessage(`Failed to discover devices: ${error.message}`);\n      logMessage(`Error details: ${JSON.stringify(error.response?.data || error)}`);\n    }\n  }, [apiUrl, logMessage]);\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === 'r' || event.key === 'R') {\n      // Reset camera\n      if (cameraRef.current && controlsRef.current) {\n        cameraRef.current.position.set(0, 0, 2);\n        controlsRef.current.target.set(0, 0, 0);\n        hasInitializedCameraRef.current = true;\n        logMessage('Camera reset to initial position');\n      }\n    }\n  }, [logMessage]);\n\n  useEffect(() => {\n    discoverDevices();\n    window.addEventListener('keydown', handleKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n    };\n  }, [discoverDevices, handleKeyPress]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (canvasRef.current && cameraRef.current && rendererRef.current) {\n        const width = canvasRef.current.clientWidth;\n        const height = canvasRef.current.clientHeight;\n\n        cameraRef.current.aspect = width / height;\n        cameraRef.current.updateProjectionMatrix();\n        rendererRef.current.setSize(width, height);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h2>🎯 RealSense 3D Point Cloud Viewer</h2>\n        <p>Interactive 3D visualization of RealSense depth data</p>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"apiUrl\">API URL:</label>\n          <input\n            type=\"text\"\n            id=\"apiUrl\"\n            value={apiUrl}\n            onChange={(e) => setApiUrl(e.target.value)}\n            placeholder=\"Enter API URL\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"deviceId\">Device ID:</label>\n          <input\n            type=\"text\"\n            id=\"deviceId\"\n            value={deviceId}\n            onChange={(e) => setDeviceId(e.target.value)}\n            placeholder=\"e.g., 844212070924\"\n          />\n        </div>\n        \n        <div>\n          <button onClick={discoverDevices} className=\"button\">\n            🔍 Discover Devices\n          </button>\n          <button \n            onClick={startPointCloudViewer} \n            className=\"button success\"\n            disabled={isViewerRunning}\n          >\n            ▶️ Start 3D Viewer\n          </button>\n          <button \n            onClick={stopPointCloudViewer} \n            className=\"button danger\"\n            disabled={!isViewerRunning}\n          >\n            ⏹️ Stop Viewer\n          </button>\n        </div>\n\n        <div className=\"status info\">\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <span><strong>Connection:</strong> {connectionStatus}</span>\n            <span><strong>Point Cloud:</strong> {pointCloudStatus}</span>\n            <span><strong>Vertices:</strong> {vertexCount.toLocaleString()}</span>\n            <span><strong>FPS:</strong> {fps}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h2>🎮 3D Viewer Controls</h2>\n        <div className=\"sessions-panel\">\n          <h3>Mouse Controls:</h3>\n          <ul>\n            <li><strong>Left Click + Drag:</strong> Rotate camera around target</li>\n            <li><strong>Right Click + Drag:</strong> Pan camera</li>\n            <li><strong>Scroll Wheel:</strong> Zoom in/out</li>\n            <li><strong>R Key:</strong> Reset camera to initial position</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h2>🎥 3D Point Cloud Viewer</h2>\n        <div style={{ \n          background: 'rgba(0, 0, 0, 0.8)', \n          borderRadius: '15px', \n          padding: '20px', \n          height: '600px', \n          position: 'relative', \n          overflow: 'hidden' \n        }}>\n          <canvas\n            ref={canvasRef}\n            style={{\n              width: '100%',\n              height: '100%',\n              borderRadius: '10px',\n              display: 'block'\n            }}\n          />\n          {!isViewerRunning && (\n            <div style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              fontSize: '18px',\n              color: '#ffd700'\n            }}>\n              Click \"Start 3D Viewer\" to begin\n            </div>\n          )}\n          {isViewerRunning && vertexCount > 0 && (\n            <div style={{\n              position: 'absolute',\n              top: '20px',\n              right: '20px',\n              background: 'rgba(0, 0, 0, 0.7)',\n              padding: '10px',\n              borderRadius: '8px',\n              fontSize: '14px',\n              color: 'white'\n            }}>\n              Points: {vertexCount.toLocaleString()}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h2>📝 Connection Log</h2>\n        <div className=\"log\">{log}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointCloudDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}